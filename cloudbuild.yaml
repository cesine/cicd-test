steps:

# Run Tests
- name: 'gcr.io/cloud-builders/npm'
  args: ['install']
- name: 'gcr.io/cloud-builders/npm'
  args: ['test']

# Uses the docker build step to build an image called my-image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/$REPO_NAME:$COMMIT_SHA', '.']

# Use Sed and Tee to create a kubernetes YAML from the template
- name: 'alpine'
  args: ["/bin/sh", "-c", "sed -e 's~<PROJECT_ID>~$PROJECT_ID~g' kubernetes.yaml | sed -e 's~<REPO_NAME>~$REPO_NAME~g' | sed -e 's~<COMMIT_SHA>~$COMMIT_SHA~g' | tee kubernetes_final.yaml"]

# Uses the kubectl tool to update the deployment
- name: 'gcr.io/cloud-builders/kubectl'
  args: ['apply', '-f', 'kubernetes_final.yaml']
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-f'
  - 'CLOUDSDK_CONTAINER_CLUSTER=cicd-test'

# my-image is pushed to Container Registry
images:
- 'gcr.io/$PROJECT_ID/$REPO_NAME:$COMMIT_SHA'